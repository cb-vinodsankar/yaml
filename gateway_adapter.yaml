openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8081/
    description: Generated server url
tags:
  - name: Transaction
    description: Transaction related api
  - name: PaymentMethod
    description: PaymentMethod related api
paths:
  /paymentMethod/add:
    post:
      tags:
        - PaymentMethod
      summary: Add paymentMethod
      operationId: addPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentMethodRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
  /paymentMethod/update:
    post:
      tags:
        - PaymentMethod
      summary: Update paymentMethod
      operationId: updatePaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentMethodRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
  /paymentMethod/delete:
    post:
      tags:
        - PaymentMethod
      summary: Delete paymentMethod
      operationId: deletePaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePaymentMethodRequest'
        required: true
      responses:
        '200':
          description: OK
  /paymentMethod/retrieve:
    get:
      tags:
        - PaymentMethod
      summary: Retrieve paymentMethod
      operationId: retrievePaymentMethod
      parameters:
        - in: query
          name: paymentMethod Id
          description: PaymentMethod references
          required: false
          schema:
            $ref: '#/components/schemas/RetrievePaymentMethodRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
  /payment/void:
    post:
      tags:
        - Transaction
      summary: Void Payment
      operationId: voidPayment
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/VoidPaymentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json::
              schema:
                $ref: '#/components/schemas/VoidPaymentResponse'
  /payment/refund:
    post:
      tags:
        - Transaction
      summary: Refund Payment
      operationId: refundPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundPaymentResponse'
  /payment/make: # VS Need make/verify also
    post:
      tags:
        - Transaction
      summary: Make Payment
      operationId: makePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakePaymentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  /payment/capture:
    post:
      tags:
        - Transaction
      summary: Capture Payment
      operationId: capturePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapturePaymentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  /payment/make/verify: # VS why payments instead of payment
    post:
      tags:
        - Transaction
      summary: Verify Payment
      operationId: verifyPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakePaymentVerifyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  /payment/retrieve:
    get:
      tags:
        - Transaction
      summary: Retrieve Payment
      operationId: retrievePayment
      parameters:
        - in: query
          name: TransactionId
          description: TransactionId at gateway
          required: false
          schema:
            $ref: '#/components/schemas/RetrievePaymentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
components:
  schemas:
    3DSInfo:
      type: object
      properties:
        attempt3D:
          type: boolean
          default: false
        version:
          type: string
        challengeIndicator:
          type: string
    BankAccount:
      type: object
      properties:
        iban:
          type: string
        accountNumber:
          type: string
        routingNumber:
          type: string
        accountType:
          type: string
        bankCode:
          type: string
        bankName:
          type: string
        additionalInformation:
          type: object
    Gateway:
      required:
        - environment
        - gatewayName
        - gatewayRequestReference
        - credentials
        - merchantAccountIdentifier
      type: object
      properties:
        gatewayRequestReference:
          type: string
        gatewayName:
          type: string
        environment:
          type: string
        merchantAccountIdentifier:
          type: string
          description: 'this is used to identify the request per merchant'
        credentials:
          type: object
    Address:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zip:
          type: string
    BillingInfo:
      type: object
      properties:
        firstName:
          type: string
        lastName: 
          type: string
        email: 
          type: string
        phone: 
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Card:
      type: object
      properties:
        cardNumber:
          type: string
        cvv:
          type: string
        expiryMonth:
          type: string
        expiryYear:
          type: string
    CardInfo:
      type: object
      properties:
          iin:
            type: string
          last4:
            type: string
          expiryMonth:
            type: string
          expiryYear:
            type: string
          fundingType:
            type: string
            description: 'Type of the cards, it is like Credit, Debit and Prepaid'
            example: 'Credit'
          issuingCountry:
            type: string
          scheme:
            type: string
            description: 'Type of the scheme, it is like Visa, Master and JCB, etc'
            example: 'Visa'
    BankInfo:
      type: object
      properties:
        mandateReference:
          type: string
        bankName:
          type: string
        ibanLast4:
          type: string
    UpiInfo:
      type: object
      properties:
        id:
          type: string
          description: "UPI Id"
          example: 'chargebee@hdfc'
    Upi:
      type: object
      properties:
        id:
          type: string
          description: "UPI Id"
          example: 'chargebee@hdfc'
    error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
    PaymentMethod:
      type: object
      properties:
        paymentMethodCustomerId:
          type: string
        paymentMethodType: 
          type: string # VS add format for ["card", "upi", "bankAccount"]
        paymentMethodTempToken:
          type: string
        paymentMethodToken: # VS we can use permanent token also here ?
          type: string
        card:
          $ref: '#/components/schemas/Card'
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        upi:
          $ref: '#/components/schemas/Upi'
    Customer:
      type: object
      properties:
        firstName:
          type: string
        lastname:
          type: string
        email:
          type: string
        company:
          type: string
        phone:
          type: string
        displayName:
          type: string
        locale:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    PaymentMethodReference:
      required:
       - paymentMethodToken
      type: object
      properties:
        paymentMethodCustomerId:
          type: string
        paymentMethodToken:
          type: string
    AddPaymentMethodRequest:
      required:
        - gatewayInfo
        - paymentMethodInfo
        - appId
      type: object
      properties:
        appId:
          type: integer
          format: int64
        gatewayInfo:
          $ref: '#/components/schemas/Gateway'
        paymentMethodInfo:
          $ref: '#/components/schemas/PaymentMethod'
        authAmount:
          type: integer
        authCurrency:
          type: string
        billingInfo:
          $ref: '#/components/schemas/BillingInfo'
        customerInfo:
          $ref: '#/components/schemas/Customer'
        additionalInfo:
          type: object
    UpdatePaymentMethodRequest:
      required:
        - gatewayInfo
        - appId
        - gatewayPaymentMethodReference
      type: object
      properties:
        appId:
          type: integer
          format: int64
        gatewayPaymentMethodReference:
          $ref: '#/components/schemas/PaymentMethodReference'
        gatewayInfo:
          $ref: '#/components/schemas/Gateway'
        billingInfo:
          $ref: '#/components/schemas/BillingInfo'
        customerInfo:
          $ref: '#/components/schemas/Customer'
        additionalInformation:
          type: object
    DeletePaymentMethodRequest:
      required:
        - appId
        - gatewayPaymentMethodReference
        - gatewayInfo
      type: object
      properties:
        appId:
          type: integer
          format: int64
        gatewayPaymentMethodReference:
          $ref: '#/components/schemas/PaymentMethodReference'
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
        additionalInformation:
          type: object
    RetrievePaymentMethodRequest:
      required:
        - appId
        - gatewayPaymentMethodReference
        - gatewayInfo
      type: object
      properties:
        appId:
          type: integer
          format: int64
        gatewayPaymentMethodReference:
          $ref: '#/components/schemas/PaymentMethodReference'
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
        additionalInformation:
          type: object
    PaymentMethodResponse:
      type: object
      properties:
        gatewayName:
          type: string
        gatewayRequestReference:
          type: string
        merchantAccountIdentifier:
          type: string
        paymentMethodCustomerId:
          type: string
        paymentMethodType:
          type: string
        PaymentMethodToken:
          type: string
        card:
          $ref: "#/components/schemas/CardInfo"
        bankAccount:
          $ref: '#/components/schemas/BankInfo'
        upi:
          $ref: '#/components/schemas/UpiInfo'
        referenceTxnId:
          type: string
        status:
          type: string
          enum:
            - VALID
            - PENDING_VERIFICATION
            - INVALID
        billingAddress:
          $ref: '#/components/schemas/Address'
        additionalInformation:
          type: string
    MakePaymentRequest:
      required:
        - gatewayInfo
        - paymentMethodInfo
        - appId
        - amount
        - currency
      type: object
      properties:
        appId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        currency:
          type: string
        gatewayInfo:
          $ref: '#/components/schemas/Gateway'
        paymentMethodInfo:
          $ref: '#/components/schemas/PaymentMethod'
        3DSInfo:
          $ref: '#/components/schemas/3DSInfo'
        customerInfo:
          $ref: '#/components/schemas/Customer'
        paymentInitiator:
          type: string
          enum:
            - CUSTOMER
            - MERCHANT
        paymentMode:
          type: string
          enum:
            - RECURRING
            - RECURRING_FIRST
            - ONE_TIME
        paymentAction:
          type: string
          enum:
            - AUTH_ONLY
            - AUTH_AND_CAPTURE
        storePaymentMethod:
          type: boolean
          description: 'Used to vault the paymnetMethod'
        storedPaymentMethod:
          type: boolean
          description: "Used to make the payment with an existing paymnetMethod"
        statementDescriptor:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Address'
        metaData: # VS Why metadata other than additionalInfo ?
          type: object
        additionalInfo:
          type: object
    MakePaymentVerifyRequest :
      required:
        - gatewayInfo
        - appId
        - amount
        - currency
        - paymentTransactionId
      type: object
      properties:
        appId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        currency:
          type: string
        paymentTransactionId :
          type: string
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
        paymentMethodInfo:
          $ref: '#/components/schemas/PaymentMethod'
        3DSInfo:
          $ref: '#/components/schemas/3DSInfo'
        customerInfo:
          $ref: '#/components/schemas/Customer'
        paymentInitiator:
          type: string
          enum:
            - CUSTOMER
            - MERCHANT
        paymentMode:
          type: string
          enum:
            - RECURRING
            - RECURRING_FIRST
            - ONE_TIME
        storePaymentMethod:
          type: boolean
          description: 'Used to vault the paymnetMethod'
        storedPaymentMethod:
          type: boolean
          description: "Used to make the payment with an existing paymnetMethod"
        statementDescriptor:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Address'
        metaData: # VS Why metadata other than additionalInfo ?
          type: object
        additionalInfo:
          type: object
          
    CapturePaymentRequest:
      required:
        - gatewayInfo
        - paymentTransactionId
        - appId
        - amount
        - currency
      type: object
      properties:
        appId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        currency:
          type: string
        paymentTransactionId:
          type: string
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
    RefundPaymentRequest:
      required:
        - gatewayInfo
        - paymentTransactionId
        - appId
        - amount
        - currency
      type: object
      properties:
        appId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        currency:
          type: string
        paymentTransactionId:
          type: string
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
    VoidPaymentRequest:
      required:
        - gatewayInfo
        - paymentTransactionId
        - appId
      type: object
      properties:
        appId:
          type: integer
          format: int64
        paymentTransactionId:
          type: string
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
    RetrievePaymentRequest:
      required:
        - gatewayInfo
        - paymentTransactionId
        - appId
      type: object
      properties:
        appId:
          type: integer
          format: int64
        paymentTransactionId:
          type: string
        gatewayInfo:
          $ref: '#/components/schemas/Gateway' 
    PaymentResponse:
      type: object
      properties:
        paymentTransactionId:
          type: string
        gatewayName:
          type: string
        gatewayRequestReference:
          type: string
        merchantAccountIdentifier:
          type: string
        amount:
          type: integer
          format: int64
        currency:
          type: string
        status:
          type: string
          enum:
            - AUTHORISED
            - CAPTURED
            - FAILURE
            - UN_KNOWN
            - IN_PROGRESS
        fraudStatus:
          type: string
          enum:
            - UN_KNOWN
            - SUSPICIOUS
            - FRAUDULENT
        fraudReason:
          type: string
        date:
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ssZ"
        error:
          $ref: "#/components/schemas/error"
        paymentMethodInfo:
          type: object
          properties:
            paymentMethodCustomerId:
              type: string
            paymentMethodType: 
              type: string # VS add format for ["card", "upi", "bankAccount"]
            paymentMethodToken: # VS we can use permanent token also here ?
              type: string
            card:
              $ref: "#/components/schemas/CardInfo"
            bankAccount:
              $ref: "#/components/schemas/BankInfo"
            upi:
              $ref: '#/components/schemas/UpiInfo'
            billingAddress:
              $ref: '#/components/schemas/Address'
        additionalInformation:
          type: object
    VoidPaymentResponse:
      type: object
      properties:
        paymentTransactionId:
          type: string
        gatewayName:
          type: string
        gatewayRequestReference:
          type: string
        merchantAccountIdentifier:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - UN_KNOWN
            - IN_PROGRESS
        date:
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ssZ"
        error:
          $ref: "#/components/schemas/error"
    RefundPaymentResponse:
      type: object
      properties:
        paymentTransactionId:
          type: string
        gatewayName:
          type: string
        gatewayRequestReference:
          type: string
        merchantAccountIdentifier:
          type: string
        amount:
          type: integer
          format: int64
        currency:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - UN_KNOWN
            - IN_PROGRESS
        date:
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ssZ"
        error:
          $ref: "#/components/schemas/error"
